openapi: 3.0.2
info:
  description: >-
    This is a DRAFT version of the API meant for provisioning resources into a JWCC Provider Cloud Environment. It will be
    implemented and maintained by all participating CSPs.
  version: 1.0.0-SNAPSHOT
  title: ATAT External API - Provisioning
  contact:
    email: atat-dev+provisioning_api@ccpo.mil
tags:
  - name: portfolio
    description: >-
      Portfolios represent a collection of related Applications under the purview of a
      Mission Owner.
  - name: funding_source
    description: >-
      Operations to add, update and remove Funding Sources from a given Portfolio
paths:
  '/portfolios':
    post:
      tags:
        - portfolio
      summary: Adds a new Portfolio
      operationId: addPortfolio
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioResponse'
        '405':
          description: Invalid input
      requestBody:
        description: A new Portfolio
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
  '/portfolios/{portfolioId}':
    get:
      tags:
        - portfolio
      summary: Gets an existing Portfolio
      description: Returns a single Portfolio
      operationId: getPortfolioById
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Portfolio not found
  '/portfolios/{portfolioId}/funding-sources':
    post:
      tags:
        - funding_source
      summary: Adds a new FundingSource to the given Portfolio
      operationId: addFundingSource
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      requestBody:
        description: A new FundingSource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingSource'
  '/portfolios/{portfolioId}/funding-sources/{fundingSourceId}':
    put:
      tags:
        - funding_source
      summary: Updates a FundingSource in a given Portfolio
      operationId: updateFundingSource
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
        - name: fundingSourceId
          in: path
          description: ID of the FundingSource
          required: true
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      requestBody:
        description: A FundingSource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingSource'
    delete:
      tags:
        - funding_source
      summary: Deletes a FundingSource from a Portfolio
      operationId: deleteFundingSource
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
        - name: fundingSourceId
          in: path
          description: ID of the FundingSource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Funding Source Deleted
        '404':
          description: Invalid Portfolio ID
  '/portfolios/{portfolioId}/applications/{applicationId}/environments/{environmentId}/operator-roles':
    post:
      tags:
        - portfolio
      summary: Assigns an Operator to a specific level of access in an Environment
      description: Assigns an Operator to a specific level of access in an Environment
      operationId: addOperatorRole
      parameters:
        - name: portfolioId
          in: path
          description: ID of the Portfolio
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: ID of the Application
          required: true
          schema:
            type: string
        - name: environmentId
          in: path
          description: ID of the Environment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperatorRole'
        '405':
          description: Invalid input
      requestBody:
        description: A new OperatorRole
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorRole'
components:
  schemas:
    Portfolio:
      type: object
      description: >-
        Logical container for a set of cloud resources which are paid for by the same set of Funding Sources / Task Orders.
        Contains a set of Applications, each of which contain a set of Environments in turn, all of which should support
        independent management and access control.
      required:
        - name
      properties:
        name:
          type: string
          example: "Sample Portfolio name"
        funding_sources:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/FundingSource'
        applications:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Application'
    PortfolioResponse:
      allOf:
        - $ref: '#/components/schemas/Portfolio'
        - type: object
          properties:
            id:
              type: string
              example: "csp-portfolio-id-123"
            applications:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ApplicationResponse'
    FundingSource:
      type: object
      description: >-
        A set of Task Orders and CLINs used to pay for JWCC resources.
      properties:
        task_order_number:
          type: string
          example: "1234567891234"
        clin:
          type: string
          example: "0001"
        pop_start_date:
          type: string
          format: date
          example: "2021-07-01"
        pop_end_date:
          type: string
          format: date
          example: "2022-07-01"
    Application:
      type: object
      description: >-
        Applications represent a set of Environments which make up a single
        application, system or set of related services as defined by a Mission
        Owner
      properties:
        name:
          type: string
          example: "Sample Application name"
        description:
          type: string
          example: "Sample Application description"
        environments:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Environment'
    ApplicationResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: "csp-application-id-123"
            environments:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/EnvironmentResponse'
        - $ref: '#/components/schemas/Application'
    Environment:
      type: object
      description: >-
        Environments represent a grouping of cloud resources, organized by
        system usage (e.g. Production, Staging, Test, Dev, etc.)
      required:
        - name
      properties:
        name:
          type: string
          example: "Production"
    EnvironmentResponse:
      allOf:
        - $ref: '#/components/schemas/Environment'
        - type: object
          properties:
            id:
              type: string
              example: "csp-environment-id-123"
    OperatorRole:
      type: object
      required:
        - operator_email
        - access
      properties:
        operator_email:
          type: string
          example: "user@mail.mil"
        access:
          type: string
          description: Operator Access Level to Environment
          enum:
            - administrator
            - read_only