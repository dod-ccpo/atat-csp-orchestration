openapi: 3.0.2
info:
  description: >-
    This API is meant for provisioning resources in a JWCC Provider Cloud Environment.
    The cloud products and services used in JWCC are provided by commercial cloud service providers (CSP).
    This API will be implemented and maintained by all participating CSPs.
    This is a DRAFT version of the API.

    ### Organization of provisioned resources
    
    Provisioned resources under the purvue of a mission owner are organized into a three level structure.

    * Portfolio
      * Application
        * Environment

    *Portfolios* consist of one or more applications. *Applications* consist of one or more environments.
    *Environments* directly contain provisioned resources.

    Access can be granted to *operators* at each level.

    ### Costs

    Portfolios contain one or more *task orders* (TO). Task orders contain one or more *contract
    line item numbers* (CLIN) that represent lines of funding. CSP costs related to provisioned resources
    can be attributed to specific CLINs. Actual and forecasted CSP costs can be reported by CLIN.
  version: 0.1.0
  title: ATAT CSP API
  contact:
    email: atat-dev+provisioning_api@ccpo.mil
tags:
  - name: access
    description: >-
      Operations to manage access to provisioned Portfolios
  - name: cost
    description: >-
      Operations to query for actual and forecasted costs
  - name: provisioning
    description: >-
      Operations to manage provisioned Portfolios.
      Portfolios represent a collection of related Applications under the purview of a
      Mission Owner.  Applications may consist of one or more Environments.
paths:
  '/portfolios':
    post:
      tags:
        - provisioning
      summary: Adds a new Portfolio
      description: Adds a new Portfolio to be provisioned, including Applications, Environments, and Operators
      operationId: addPortfolio
      requestBody:
        description: A new Portfolio
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Portfolio'
      responses:
        '200':
          description: Portfolio fully provisioned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioResponse'
        '202':
          description: Portfolio provisioning request has been accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningStatus'
          headers:
            Location:
              description: Endpoint which ATAT should poll to receive status updates for this provisioning job
              schema:
                type: string
                example: https://csp.com/jwcc/provisioning/123456789/status
        '405':
          description: Invalid input
  '/portfolios/{portfolioId}':
    get:
      tags:
        - provisioning
      summary: Gets an existing Portfolio
      description: Returns a single existing Portfolio, including Applications, Environments, and Operators
      operationId: getPortfolioById
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Portfolio successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Portfolio not found
  '/portfolios/{portfolioId}/operator-roles':
    post:
      tags:
        - access
      summary: Assigns a role to an Operator of the Portfolio
      description: Assigns a specific level of access to an Operator within a given Portfolio
      operationId: addPortfolioOperatorRole
      parameters:
        - name: portfolioId
          in: path
          description: ID of the Portfolio
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioOperatorRole'
        '405':
          description: Invalid input
      requestBody:
        description: A PortfolioOperatorRole that associates the Operator with a specific level of access
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioOperatorRole'
  '/portfolios/{portfolioId}/applications/{applicationId}/operator-roles':
    post:
      tags:
        - access
      summary: Assigns a role to an Operator of the Application
      description: Assigns a specific level of access to an Operator within a given Application
      operationId: addApplicationOperatorRole
      parameters:
        - name: portfolioId
          in: path
          description: ID of the Portfolio
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: ID of the Application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOperatorRole'
        '405':
          description: Invalid input
      requestBody:
        description: An ApplicationOperatorRole that associates the Operator with a specific level of access
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationOperatorRole'
  '/portfolios/{portfolioId}/applications/{applicationId}/environments/{environmentId}/operator-roles':
    post:
      tags:
        - access
      summary: Assigns a role to an Operator of the Environment
      description: Assigns a specific level of access to an Operator within a given Environment
      operationId: addEnvironmentOperatorRole
      parameters:
        - name: portfolioId
          in: path
          description: ID of the Portfolio
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: ID of the Application
          required: true
          schema:
            type: string
        - name: environmentId
          in: path
          description: ID of the Environment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentOperatorRole'
        '405':
          description: Invalid input
      requestBody:
        description: An EnvironmentOperatorRole that associates the Operator with a specific level of access
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentOperatorRole'
  '/portfolios/{portfolioId}/taskorders/{taskOrderNumber}/clins/{clin}/cost':
    post:
      tags:
        - cost
      summary: Returns cost data by Clin
      description: Queries CSP for actual and forecasted cost data by Clin
      operationId: getCostsByClin
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
        - name: taskOrderNumber
          in: path
          description: task order number
          required: true
          schema:
            type: string
        - name: clin
          in: path
          description: contract line item number
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FOOBAR'
      responses:
        '200':
          description: Cost operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FOOBAR'
        '400':
          description: Invalid ID supplied
        '404':
          description: Portfolio not found
  '/portfolios/{portfolioId}/applications':
    post:
      tags:
        - provisioning
      summary: Adds new Applications
      description: Adds new Applications to be provisioned in an existing Portfolio
      operationId: addApplications
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Application'
      responses:
        '200':
          description: Application(s) fully provisioned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Portfolio not found
  '/portfolios/{portfolioId}/applications/{applicationId}/environments':
    post:
      tags:
        - provisioning
      summary: Adds new Environments
      description: Adds new Environments to be provisioned in an existing Application
      operationId: addEnvironments
      parameters:
        - name: portfolioId
          in: path
          description: ID of the portfolio
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Environment'
      responses:
        '200':
          description: Cost operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Portfolio not found
components:
  schemas:
    ProvisioningStatus:
      type: object
      description: >-
        Represents the status of a provisioning job submitted via POST /portfolios
      properties:
        id:
          type: string
          description: The ID of the Provisioning job; used for retrieving status to inform end user
          example: 123456789
        status:
          type: string
          enum:
            - "NOT_STARTED"
            - "IN_PROGRESS"
            - "COMPLETE"
            - "FAILED"
    Portfolio:
      type: object
      description: >-
        Logical container for a set of cloud resources which are paid for by the same set of Funding Sources / Task Orders.
        Contains a set of Applications, each of which contain a set of Environments in turn, all of which should support
        independent management and access control.
      required:
        - name
      properties:
        name:
          type: string
          example: "Sample Portfolio name"
        funding_sources:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/FundingSource'
        applications:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Application'
        operator_roles:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PortfolioOperatorRole'
    PortfolioResponse:
      allOf:
        - $ref: '#/components/schemas/Portfolio'
        - type: object
          properties:
            id:
              type: string
              example: "csp-portfolio-id-123"
            applications:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ApplicationResponse'
    FundingSource:
      type: object
      description: >-
        A set of Task Orders and CLINs used to pay for JWCC resources.
      properties:
        task_order_number:
          type: string
          example: "1234567891234"
        clin:
          type: string
          example: "0001"
        pop_start_date:
          type: string
          format: date
          example: "2021-07-01"
        pop_end_date:
          type: string
          format: date
          example: "2022-07-01"
    Application:
      type: object
      description: >-
        Applications represent a set of Environments which make up a single
        application, system or set of related services as defined by a Mission
        Owner
      properties:
        name:
          type: string
          example: "Sample Application name"
        description:
          type: string
          example: "Sample Application description"
        environments:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Environment'
        operator_roles:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ApplicationOperatorRole'
    ApplicationsResponse:
      allOf:
        - type: object
          properties:
            portfolioId:
              type: string
              example: "csp-portfolio-id-123"
            applications:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ApplicationResponse'
    ApplicationResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: "csp-application-id-123"
            environments:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/EnvironmentResponse'
        - $ref: '#/components/schemas/Application'
    Environment:
      type: object
      description: >-
        Environments represent a grouping of cloud resources, organized by
        system usage (e.g. Production, Staging, Test, Dev, etc.)
      required:
        - name
      properties:
        name:
          type: string
          example: "Production"
        operator_roles:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/EnvironmentOperatorRole'
    EnvironmentsResponse:
      allOf:
        - type: object
          properties:
            portfolioId:
              type: string
              example: "csp-portfolio-id-123"
            applicationId:
              type: string
              example: "csp-application-id-123"
            environments:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/EnvironmentResponse'
    EnvironmentResponse:
      allOf:
        - $ref: '#/components/schemas/Environment'
        - type: object
          properties:
            id:
              type: string
              example: "csp-environment-id-123"
    PortfolioOperatorRole:
      type: object
      required:
        - operator_email
        - access
      properties:
        operator_email:
          type: string
          example: "portfolio.admin@mail.mil"
        access:
          $ref: '#/components/schemas/PortfolioAccess'
    ApplicationOperatorRole:
      type: object
      required:
        - operator_email
        - access
      properties:
        operator_email:
          type: string
          example: "application.user@mail.mil"
        access:
          $ref: '#/components/schemas/ApplicationAccess'
    EnvironmentOperatorRole:
      type: object
      required:
        - operator_email
        - access
      properties:
        operator_email:
          type: string
          example: "environment.user@mail.mil"
        access:
          $ref: '#/components/schemas/EnvironmentAccess'
    PortfolioAccess:
      description: Operator access level to Portfolio
      type: string
      enum:
        - portfolio_administrator
    ApplicationAccess:
      description: Operator access level to Application
      type: string
      enum:
        - administrator
        - contributor
        - read_only
    EnvironmentAccess:
      description: Operator access level to Environment
      type: string
      enum:
        - administrator
        - contributor
        - read_only
    FOOBAR:
      type: string
